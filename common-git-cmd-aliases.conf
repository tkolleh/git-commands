# ## Usage
#
# Save this file somewhere on your system E.g.:
#
#      ~/.local/share/git/common-git-cmd-aliases.conf
#
# Edit ~/.gitconfig to include this file:
#
#      vim ~/.gitconfig
#
# Include the path to the alias file:
#
#     [include]
#     path = ~/.local/share/git/common-git-cmd-aliases.conf
#
## License
#
# Created by [tkolleh](http://kolleh.com)
# This file is licensed under the MIT License.
# See <https://github.com/tkolleh/git-commands/tree/main?tab=MPL-2.0-1-ov-file> for details.
#
#
#
[alias]
  # Assume/Unassume aliases
  # [Assume](https://shorturl.at/hbcPN)
  assume = update-index --assume-unchanged                                    # assume file unchanged
  unassume = update-index --no-assume-unchanged                               # unassume file
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"                          # show assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged" # unassume all assumed files

  # Checkout operations
  co = checkout                      # checkout shortcut
  cb = checkout -b                   # create and switch to new branch
  discard = checkout --              # discard changes
  main = checkout main               # checkout main branch
  master = checkout master           # checkout master branch

  # Branch operations
  branches = "!git branches"         # Branch viewer with fzf
  br = branch -v                     # branch (verbose)

  # Add operations
  aa = add --all                     # add all changes

  # Commit operations
  commits = "!git commits"           # List of commits with fzf
  changes = "!git commits"           # List of commits with fzf
  com = "!git guided-commit"         # Interactive git commit with conventional commit format
  amend = commit --amend --message   # amend and edit message

  # Reset operations
  uncommit = reset --soft HEAD^     # undo last commit, keep changes
  unstage = "!fn() { git restore --staged \"$@\"; }; fn"        # unstage files

  # Log operations
  bullets = "log --pretty=format:\" * %s\"" # Markdown bullet list
  filelog = "log -u"                        # show changes to a file
  changelog = "log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order"
  history = "!git log --stat --date=short"      # history graph with short dates

  # Diff operations
  precommit = difftool --tool=vimdiff --cached                                                # diff cached/staged changes in vimdiff
  diffto = "!diffto() { local count=$1; shift; git diff --ext-diff HEAD~$count $*; }; diffto" # diff to X commits back

  # Repository navigation
  root = rev-parse --show-toplevel  # show top level folder
  ignored = status --ignored        # show ignored files

  # Configuration
  aliases = "!git aliases"          # interactive alias viewer with fzf

  # File operations
  files = "!git files"      # list tracked and unstaged files
  
  # Merge/remote operations
  mt = mergetool                     # launch merge tool
  origin = remote -v show origin     # show origin info

  # Branch management
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f" # mark branch as done

  # Remote operations
  remotes = "!git remotes"           # show remotes (verbose)

  # Stash operations
  stashes = "!git stashes"           # list stashes

  # Status operations
  brief = "!git brief" # short status with branch info
  st = "status -b"     # short status with branch info

 # Tag operations
  tags = "!git tags"                           # list all tags
  lasttag = describe --always --tag --abbrev=0 # show last tag

  # Worktree operations
  worktrees = "!git worktrees"
